
//stuff to handle xml files
var xpath = require('xpath')
  , dom = require('xmldom').DOMParser
  , fs = require('fs')
  , path = require('path')
  , _ = require('underscore')
	;


if (global.log) {
	var log = global.log.child({'mod': 'g6.xdata.js'});
} else {
	//e.g when testing 
	var log = require('bunyan').createLogger({
				'name': 'g6.xdata.js', 'level': 'info'
		});
}

function mapTemplate(xDoc, dbFile)
{
	var template = xpath.select("//xData", xDoc)[0].getAttribute("template");
	var dbKey = path.basename(dbFile).split(".")[0];
	var mapKey = template + " > " + dbKey;

	var mapping = {
			/* 	{ EntityType : 
			   		{ TopicTable : 
						{FieldName : ["table", "field"] }
				}} */
		"LIMA_PPC_N > gaslink" 
		: { "Perforacion"
			: { "MetaUbicacion"
				: {	  "Numero_Proyecto" : ["MetaLocation", "Project_Number"]
					, "Nombre_Proyecto" : ["MetaLocation", "Project_Name"]
					, "Cliente" : ["MetaLocation", "Client"]
					, "Responsable_logueado" : ["MetaLocation", "Person_logging"]
					, "<userName>" : ["MetaLocation", "user"]	
					, "<logDate>" : ["MetaLocation", "date"]	
				  }
			    , "Descripcion_geologica"
				: {	  "<from>": ["Material", "from"]
					, "<to>": ["Material", "to"]
					, "Tipo_material": ["Material", "type"]  
					, "<userName>" : ["Material", "user"]	
					, "<logDate>" : ["Material", "date"]	
				  }
			  }	
		  }
	};

	return mapping[mapKey];
} 

function XDocument(docFile)
{
	this.doc = null;

	var me = this;
	function parse(file) {
		var xml = fs.readFileSync(file, {"encoding": "utf-8"});
		//console.log(xml);
		me.doc = new dom().parseFromString(xml);		
	}

	parse(docFile);

	this.post = function(db) {
		//console.log(template + " - " + db.dbFile);
		var mapping = mapTemplate(this.doc, db.dbFile);


		//console.log(mapping);
		var supports = xpath.select("//xData/entityList/entity/topic/support", this.doc);
		_.each(supports, function(support) {
			var entity = support.parentNode.parentNode.getAttribute("type");
			var topic = support.parentNode.getAttribute("table");
			if (mapping[entity] && mapping[entity][topic]) {
				var stype = support.getAttribute("type");
				var smap = mapping[entity][topic];
				console.log(entity + "." + topic + " > " + smap);

				var protoRow = {};
				protoRow[smap["<userName>"]] 
					= xpath.select("userName/text()", support).toString();
				protoRow[smap["<logDate>"]] 
					= xpath.select("logDate/text()", support)[0].toString();

				if (stype == "none") {
					;
				} else if (stype == "interval") {

					var pos = xpath.select("position/text()", support)
										.toString().split("|");

					protoRow[smap["<from>"]] = pos[0];
					protoRow[smap["<to>"]] = pos[1];

				}
				_.each(xpath.select("register", support), function(register) {
					var row = _.clone(protoRow);
					_.each(xpath.select("field", register), function(field) {

					});
					console.log(row);
				});
			}
		});
	}

}

exports.XDocument = XDocument;
